[{"/Users/hilal/Documents/GitHub/medium-template/src/index.js":"1","/Users/hilal/Documents/GitHub/medium-template/src/reportWebVitals.js":"2","/Users/hilal/Documents/GitHub/medium-template/src/App.js":"3","/Users/hilal/Documents/GitHub/medium-template/src/pages/home/Home.jsx":"4","/Users/hilal/Documents/GitHub/medium-template/src/pages/new-story/NewStory.jsx":"5","/Users/hilal/Documents/GitHub/medium-template/src/pages/topics/Topics.jsx":"6","/Users/hilal/Documents/GitHub/medium-template/src/pages/search/Search.jsx":"7","/Users/hilal/Documents/GitHub/medium-template/src/pages/read/Read.jsx":"8","/Users/hilal/Documents/GitHub/medium-template/src/components/NavBar/NavBar.jsx":"9","/Users/hilal/Documents/GitHub/medium-template/src/pages/stats/index.jsx":"10","/Users/hilal/Documents/GitHub/medium-template/src/pages/stories/index.jsx":"11","/Users/hilal/Documents/GitHub/medium-template/src/components/ArticleListItem/ArticleListItem.jsx":"12","/Users/hilal/Documents/GitHub/medium-template/src/components/TopicsToFollow/TopicsToFollow.jsx":"13","/Users/hilal/Documents/GitHub/medium-template/src/components/Footer/Footer.jsx":"14","/Users/hilal/Documents/GitHub/medium-template/src/components/PeopleList/PeopleList.jsx":"15","/Users/hilal/Documents/GitHub/medium-template/src/components/CategoriesBar/CategoriesBar.jsx":"16","/Users/hilal/Documents/GitHub/medium-template/src/components/TagsList/TagsList.jsx":"17","/Users/hilal/Documents/GitHub/medium-template/src/components/Reactions/Reactions.jsx":"18","/Users/hilal/Documents/GitHub/medium-template/src/components/CategoryPicker/index.jsx":"19","/Users/hilal/Documents/GitHub/medium-template/src/components/ArticleItemDetails/ArticleItemDetails.jsx":"20"},{"size":547,"mtime":1610466013734,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1610466013740,"results":"23","hashOfConfig":"22"},{"size":990,"mtime":1610549388608,"results":"24","hashOfConfig":"22"},{"size":3146,"mtime":1610655408473,"results":"25","hashOfConfig":"22"},{"size":4055,"mtime":1610632722431,"results":"26","hashOfConfig":"22"},{"size":1739,"mtime":1610466013740,"results":"27","hashOfConfig":"22"},{"size":2993,"mtime":1610466013737,"results":"28","hashOfConfig":"22"},{"size":1650,"mtime":1610466013736,"results":"29","hashOfConfig":"22"},{"size":2272,"mtime":1610466013733,"results":"30","hashOfConfig":"22"},{"size":373,"mtime":1610466013738,"results":"31","hashOfConfig":"22"},{"size":2570,"mtime":1610654631521,"results":"32","hashOfConfig":"22"},{"size":794,"mtime":1610548627013,"results":"33","hashOfConfig":"22"},{"size":838,"mtime":1610466013734,"results":"34","hashOfConfig":"22"},{"size":830,"mtime":1610466013732,"results":"35","hashOfConfig":"22"},{"size":1870,"mtime":1610466013733,"results":"36","hashOfConfig":"22"},{"size":2113,"mtime":1610466013732,"results":"37","hashOfConfig":"22"},{"size":757,"mtime":1610466013733,"results":"38","hashOfConfig":"22"},{"size":3016,"mtime":1610466013733,"results":"39","hashOfConfig":"22"},{"size":3229,"mtime":1610466013732,"results":"40","hashOfConfig":"22"},{"size":1745,"mtime":1610656732060,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"zv7eut",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hilal/Documents/GitHub/medium-template/src/index.js",[],["84","85"],"/Users/hilal/Documents/GitHub/medium-template/src/reportWebVitals.js",[],"/Users/hilal/Documents/GitHub/medium-template/src/App.js",[],"/Users/hilal/Documents/GitHub/medium-template/src/pages/home/Home.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/pages/new-story/NewStory.jsx",["86"],"import React, { Component } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { Container } from \"react-bootstrap\";\nimport \"react-quill/dist/quill.bubble.css\";\nimport { Button } from \"react-bootstrap\";\n//import Parser from 'html-react-parser';\nimport \"./styles.scss\";\nimport CategoryPicker from \"../../components/CategoryPicker\";\n\n\nexport default class NewStory extends Component {\n  state = {\n    html: \"\",\n    topic:'',\n    data:{\n      headLine:'',\n      subHead:'',\n      content:'',\n      category:{\n        name:'', \n        img:''},\n      author:{ \n        name:'', \n        img:''},\n      cover:''\n\n    },\n  };\n\n  editor = React.createRef();\n\n  postFetch= async()=>{ \n    const url=process.env.REACT_APP_URL\n    try {\n      let response= await fetch(url,\n      { \n      method: \"POST\",\n      body: JSON.stringify(this.state.data),\n      headers: new Headers({\n      \"Content-Type\": \"application/json\"})\n      })\n      if (response.ok){\n        console.log(\"article posted successfully\")\n        this.setState({\n\n          data:{\n            headLine:'',\n            subHead:'',\n            content:'',\n            category:{\n              name:'', \n              img:''},\n            author:{ \n              name:'', \n              img:''},\n            cover:''\n      \n          }\n        })\n       }\n      else{\n        console.log(\"an error occurred\")\n        let error = await response.json()\n       console.log(error)}\n    } catch (error) {\n      console.log(error)\n      \n    }\n  }\n  ParseChange=(html)=>{\n    let  htmlString = html\n    let  parsedHtml= htmlString.replace(/<[^>]+>/g, '')\n   \n    let data={...this.state.data}\n    let content= \"content\"\n    data[content] = parsedHtml\n    this.setState({data})\n    \n    console.log(html)\n\n  }\n  onChange = (e) => {\n    \n   \n    let data={...this.state.data}\n    let currentid = e.currentTarget.id\n\t\tdata[currentid] = e.currentTarget.value \n    this.setState({data:data})\n    \n   \n   \n\n  };\n  onKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      this.editor && this.editor.current.focus();\n    }\n  };\n  render() {\n    const { html } = this.state;\n    return (\n      <Container className=\"new-story-container\" expand=\"md\">\n        <div className=\"category-container\">\n        <CategoryPicker onChange={(topic)=>{\n           let data={...this.state.data}\n           let category= \"category\"\n           data[category].name = topic.name\n           data[category].img= topic.img\n           this.setState({data})\n           }} />\n        </div>\n        <input\n          onKeyDown={this.onKeyDown}\n          placeholder=\"Title\"\n          className=\"article-title-input\"\n          id=\"headLine\"\n          value={this.state.data.headLine}\n          onChange={this.onChange}\n        />\n\n        <ReactQuill\n          modules={NewStory.modules}\n          formats={NewStory.formats}\n          ref={this.editor}\n          theme=\"bubble\"\n          //value={html}\n          onChange={this.ParseChange}\n          placeholder=\"Tell your story...\"\n        />\n        <input\n          onKeyDown={this.onKeyDown}\n          placeholder=\"Cover link e.g : https://picsum.photos/800\"\n          className=\"article-cover-input\"\n          id=\"cover\"\n          value={this.state.data.cover}\n          onChange={this.onChange}\n        />\n        {this.state.data.content}\n       \n        <Button variant=\"success\" className=\"post-btn\" onClick={this.postFetch}>\n          Post\n        </Button>\n      </Container>\n    );\n  }\n}\n\nNewStory.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }],\n\n    [\"bold\", \"italic\", \"blockquote\"],\n    [\n      { align: \"\" },\n      { align: \"center\" },\n      { align: \"right\" },\n      { align: \"justify\" },\n    ],\n\n    [\"link\", \"image\"],\n\n    [\"clean\"],\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false,\n  },\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nNewStory.formats = [\n  \"header\",\n  \"bold\",\n  \"italic\",\n  \"blockquote\",\n  \"align\",\n\n  \"link\",\n  \"image\",\n];\n","/Users/hilal/Documents/GitHub/medium-template/src/pages/topics/Topics.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/pages/search/Search.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/pages/read/Read.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/components/NavBar/NavBar.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/pages/stats/index.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/pages/stories/index.jsx",["87","88","89"],"/Users/hilal/Documents/GitHub/medium-template/src/components/ArticleListItem/ArticleListItem.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/components/TopicsToFollow/TopicsToFollow.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/components/Footer/Footer.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/components/PeopleList/PeopleList.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/components/CategoriesBar/CategoriesBar.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/components/TagsList/TagsList.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/components/Reactions/Reactions.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/components/CategoryPicker/index.jsx",[],"/Users/hilal/Documents/GitHub/medium-template/src/components/ArticleItemDetails/ArticleItemDetails.jsx",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":101,"column":13,"nodeType":"96","messageId":"97","endLine":101,"endColumn":17},{"ruleId":"94","severity":1,"message":"98","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":17},{"ruleId":"94","severity":1,"message":"99","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":14},{"ruleId":"94","severity":1,"message":"100","line":4,"column":25,"nodeType":"96","messageId":"97","endLine":4,"endColumn":34},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'html' is assigned a value but never used.","Identifier","unusedVar","'Bootstrap' is defined but never used.","'List' is defined but never used.","'ListGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]